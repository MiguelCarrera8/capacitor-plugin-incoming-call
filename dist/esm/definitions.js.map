{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\r\n\r\nexport interface CallDetectorPlugin {\r\n  echo(options: { value: string }): Promise<{ value: string }>;\r\n  /**\r\n   * To enable / disable detection of calls \r\n   * options: { action: 'ACTIVATE' | 'DEACTIVATE' }\r\n   * \r\n   */\r\n  detectCallState(options: { action: string }): Promise<{ action: string }>;\r\n  addListener(\r\n    eventName: 'callStateChange',\r\n    listenerFunc: CallStateChangeListener,\r\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\r\n}\r\n\r\n\r\nexport interface PhoneState {\r\n  /**\r\n   * Whether there is an active call or not.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  callActive: boolean;\r\n\r\n  /**\r\n   * The type of call.\r\n   *\r\n   * 'RINGING' | 'OUTGOING' | 'IDLE' | 'ON_CALL' | 'ON_HOLD'\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  callState: PhoneStateType;\r\n\r\n  incomingNumber: string;\r\n\r\n  outgoingNumber: string;\r\n\r\n}\r\n\r\nexport type PhoneStateType = 'RINGING' | 'OUTGOING' | 'IDLE' | 'ON_CALL' | 'ON_HOLD';\r\n\r\n\r\nexport type CallStateChangeListener = (status: PhoneState) => void;"]}